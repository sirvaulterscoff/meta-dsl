package com.otr.fssp.mim.decl

import com.otr.fssp.mim.model.объявитьТип
import com.otr.fssp.mim.model.описатьПоле
import java.time.LocalDate
import java.time.LocalDateTime
import java.util.*

object ТипыДанных {
    val tCaseType = объявитьТип<String>(
        "Дело «Исполнительное производство»",
        "Дело «Исполнительное производство» (CAS_01)",
        "Уникальный идентификатор",
        ФорматПоШаблону("Вид дела № <Регистрационный номер дела> от <Дата принятия дела в производство>"),
        ФорматПоШаблону("<Регистрационный номер дела>")
    )
    val tObjectId = объявитьТип<UUID>(
        "Идентификатор в подсистеме",
        "Идентификатор карточки в формате ULID",
        "Уникальный идентификатор"
    )
    val tObjectOldId = объявитьТип<String>(
        "Идентификатор из наследуемой подсистемы",
        "Идентификатор карточки из информационной системы, откуда произведена миграция данных",
        "Строка до 25 символов"
    )
    val tDocTypeLink = объявитьТип<UUID>(
        "Вид документа", "Вид документа из справочника «Виды документов» (REF_002)",
        "Уникальный идентификатор",
        //todo поля документов должны быть доступны из типа
        ПолеСвязанногоОъекта(ТипыСправочников.ВидыДокументов, описатьПоле("123", "123", ТипыДанных::tCaseType))
    )
    val tMVVId = объявитьТип<Long>(
        "Идентификатор для межведомственного взаимодействия",
        "Уникальный идентификатор для межведомственного взаимодействия",
        "\"Целое \n" +
                "Минимальное значение = «-9223372036854775808»; Максимальное значение = «9223372036854775807»\""
    )
    val tPrivacyCategoryLink = объявитьТип<String>(
        "Категории конфиденциальности",
        "Категории конфиденциальности из справочника «Категории конфиденциальности» (REF_011)",
        "Уникальный идентификатор",
        //todo поля документов должны быть доступны из типа
        ПолеСвязанногоОъекта(ТипыСправочников.ВидыДокументов, описатьПоле("123", "123", ТипыДанных::tCaseType))
    )
    val tDateStatus = объявитьТип<LocalDateTime>(
        "Дата статуса",
        "Дата статуса",
        "Дата и время"
    )
    val tRegDocNumber = объявитьТип<String>(
        "Регистрационный номер документа в подсистеме",
        "Регистрационный номер документа в подсистеме",
        "Строка до 20 символов"
    )
    val tDocDate = объявитьТип<LocalDate>(
        "Дата документа",
        "Дата документа (дата создания, регистрации и т.п.)",
        "Дата",
        ФорматПоШаблону("ДД-ММ-ГГГГ")
    )
}
