package com.otr.fssp.mim.документы

import com.otr.fssp.mim.decl.*
import com.otr.fssp.mim.executor.ModelExecutor
import com.otr.fssp.mim.model.*

fun main() {
    ModelExecutor.ОписаниеПЗ {
        ПЗ(
            документ = ТипыДокументов.ИП,
            разделы = listOf(
                Раздел1_1(listOf(ФункцииСистемы.Функция1)),
                Раздел1_2(
                    """
                    Карточка дела «Исполнительное производство» используется для учета специального дела «Исполнительное производство» 
                    в Сегменте ПК ОСП и учета текущего состояния исполнительного производства при формировании документов в рамках 
                    исполнительного производства. 
                """
                ),
                Раздел1_3(
                    listOf(
                        АктНПА(ПереченьНПА.LAW_002),
                        АктНПА(ПереченьНПА.LAW_006, listOf("11.25.1", "12.1"))
                    )
                ),
                Раздел1_4(listOf(ФункцииСистемы.Функция1)),
                //todo наверное нужно пересмотреть подход с наследованием, оставив необходимость указания только Исключен
                Раздел1_5(
                    listOf(
                        СведенияОПроцессеДеятельности(
                            ПроцессыДеятельности.Процесс_1,
                            ПризнакНаследования.Наследуется
                        )
                    )
                ),
                Раздел1_6(listOf(ТипыДокументов.ВходящийДокумент)),
                Раздел1_7(
                    listOf(
                        СведенияОСправочнике(ТипыСправочников.ВидыДокументов, ПризнакНаследования.Наследуется),
                        СведенияОСправочнике(ТипыСправочников.ВидыСпециальныхДел, ПризнакНаследования.Наследуется),
                        СведенияОСправочнике(ТипыСправочников.СправочникСтатусов, ПризнакНаследования.Наследуется),
                        СведенияОСправочнике(ТипыСправочников.СправочникСостояний, ПризнакНаследования.Наследуется),
                    )
                ),
                Раздел1_8(listOf(СведенияОДокументе(ТипыДокументов.ИД, ПризнакНаследования.НЕТ))),
                Раздел1_11(
                    listOf(
                        СведенияОДокументе(ТипыРегистров.СведенияОДолжнике),
                        СведенияОДокументе(ТипыРегистров.СведенияОДолжнике),
                    )
                ),
                Раздел2_3(
                    listOf(
                        ГруппаПолей(
                            "Основная информация",
                            "Группа реквизитов с основной информацией о деле ",
                            EP.MainInfo
                        ),
                        ГруппаПолей(
                            "Сведения об ИД",
                            "Группа реквизитов с информацией об ИД",
                            EP.ExDocInfo
                        )
                    ),
                )
            )
        )
    }
}

object IncomingDocument {
    val CaseType = описатьПоле("Вид дела", "Вид дела", ТипыДанных::tCaseType)
    val CaseType2 = описатьПоле("Вид дела", "Вид дела", ТипыДанных::tCaseType)
}
object EP {
    object MainInfo {
        val CaseType = описатьПоле("Вид дела", "Вид дела", ТипыДанных::tCaseType)
        val CaseId = описатьПоле(
            "Идентификатор карточки дела",
            "Уникальный идентификатор карточки специального дела, присвоенный в подсистеме",
            ТипыДанных::tObjectId
        )
        val CaseOldId = описатьПоле(
            "Идентификатор карточки дела в наследуемой подсистеме",
            "Уникальный идентификатор карточки специального дела, присвоенный в наследуемой подсистеме",
            ТипыДанных::tObjectOldId
        )
        val MVVId = описатьПоле(
            "Идентификатор для межведомственного взаимодействия",
            "Уникальный идентификатор для межведомственного взаимодействия",
            ТипыДанных::tMVVId,
            true,
            АвтоматическоеЗаполнение("Автоматически значением уникального идентификатора для межведомственного взаимодействия")
        )
        val CaseStatusDate = описатьПоле(
            "Дата статуса",
            "Дата статуса",
            ТипыДанных::tDateStatus,
            true,
            АвтоматическоеЗаполнение("Автоматически значением даты и времени перехода карточки дела на текущий статус")
        )
    }
    object ExDocInfo {
        val ExDocRegNum = описатьПоле(
            "Регистрационный номер ИД",
            "Регистрационный номер ИД. Присваивается при регистрации ИД",
            ТипыДанных::tRegDocNumber,
            true,
            АвтоматическоеЗаполнение("Автоматически значением реквизита из документа «Исполнительный документ» (DOC_02.1_001)")
        )
        val ExDocRegDate = описатьПоле(
            "Дата регистрации ИД",
            "Дата регистрации ИД",
            ТипыДанных::tDocDate,
            true,
            АвтоматическоеЗаполнение("Автоматически значением реквизита из документа «Исполнительный документ» (DOC_02.1_001)")
        )
    }
}